/*
Question 1:
Create a query that lists each movie, the film category it is classified in,
and the number of times it has been rented out.
*/


WITH t1 AS (
	SELECT f.title as title, c.name as category, r.rental_date as rentals
	FROM film f, film_category fc, category c, rental r, inventory i
	WHERE f.film_id = fc.film_id
		AND fc.category_id = c.category_id
		AND f.film_id = i.film_id
		AND r.inventory_id = i.inventory_id )

SELECT title, category, COUNT(rentals)
FROM t1
GROUP BY 1, 2
ORDER BY 2,1;


/* to move the file to my file system as .csv file */
COPY (
WITH t1 AS (
	SELECT f.title as title, c.name as category, r.rental_date as rentals
	FROM film f, film_category fc, category c, rental r, inventory i
	WHERE f.film_id = fc.film_id
		AND fc.category_id = c.category_id
		AND f.film_id = i.film_id
		AND r.inventory_id = i.inventory_id )

SELECT title, category, COUNT(rentals)
FROM t1
GROUP BY 1, 2
ORDER BY 2,1)

TO '/tmp/question1.csv' DELIMITER ',' CSV HEADER;



/*
Question 2:
Now we need to know how the length of rental duration of these family-friendly
movies compares to the duration that all movies are rented for. Can you provide
a table with the movie titles and divide them into 4 levels (first_quarter,
second_quarter, third_quarter, and final_quarter) based on the quartiles
(25%, 50% 75%) of the rental duration for movies across all categories?
Make sure to also indicate the category that these family-friendly movies fall
into.
*/

/* percentiles */
SELECT 	film_category,
		standard_quartile,
		COUNT(*) as film_count
FROM
	(
	SELECT  film_title,
		film_category,
		rental_duration,
		NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
	FROM
		(
		SELECT 	f.title as film_title,
			c.name as film_category,
			f.rental_duration as rental_duration
		FROM film f, film_category fc, category c
		WHERE f.film_id = fc.film_id
		AND fc.category_id = c.category_id) t1
	WHERE film_category in ('Animation', 'Children', 'Classics',
			'Comedy', 'Family', 'Music')) t2
GROUP BY 1,2
ORDER BY 1,2;



/*
Question 3:
We want to find out how the two stores compare in their count of rental orders
during every month for all the years we have data for. Write a query that
returns the store ID for the store, the year and month and the number of rental
orders each store has fulfilled for that month. Your table should include a
column for each of the following: year, month, store ID and count of rental
orders fulfilled during that month.
*/

COPY (
SELECT 	DATE_PART('month', r.rental_date) AS rental_month,
	DATE_PART('year', r.rental_date) AS rental_year,
	s.store_id,
	COUNT(r.rental_id) AS count_rentals
FROM store s, rental r, staff st
WHERE s.manager_staff_id = st.staff_id 
	AND st.staff_id = r.staff_id
GROUP BY 1,2,3
ORDER BY 4 DESC)
TO '/tmp/question3.csv' DELIMITER ',' CSV HEADER;



/*
Question 4:
We would like to know who were our top 10 paying customers, how many payments
they made on a monthly basis during 2007, and what was the amount of the
monthly payments. Can you write a query to capture the customer name, month
and year of payment, and total payment amount for each month by these top
10 paying customers?
*/

WITH t2 AS (
	SELECT 	cust_id,
		DATE_TRUNC('month', pay_date) AS pay_month,
		t1.fullName AS fullName,
		COUNT(pay_date) AS pay_count_per_month,
		SUM(amount) AS pay_amount
	FROM (
		SELECT 	c.customer_id AS cust_id,
			p.payment_date AS pay_date,
			c.first_name AS first_name,
			c.last_name AS last_name,
			c.first_name || ' ' || c.last_name AS fullName,
			p.amount AS amount
		FROM customer c, payment p
		WHERE c.customer_id = p.customer_id) t1
		GROUP BY 1,2,3
		ORDER BY 3),

	t3 AS (
		SELECT 	t2.cust_id,
			fullName,
			SUM(pay_amount)
		FROM t2
		GROUP BY 1,2
		ORDER BY 3 DESC
		LIMIT 10)

SELECT 	t2.pay_month,
		t2.fullname,
		t2.pay_count_per_month,
		t2.pay_amount
	FROM t2, t3
	WHERE t2.cust_id = t3.cust_id;